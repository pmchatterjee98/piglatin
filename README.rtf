{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15820\viewh13720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 There is a http server that receives requests, converts the request to pig latin, and sends the output back via http.\
There is a http client which does the testing by sending requests to the http server and comparing the received strings to expected outputs.\
\
The simple http server is implemented in C /  C++ using sockets, and has simple multi-threading to handle parallel requests.  The source files are:\
  - http_service.cpp: simple socket based http service that uses the pig_latin library.\
  - pig_latin.\{h, cpp\}: the library that converts input strings to pig latin.\
To build and run the server, simply run\
$ make\
$ ./http_service\
NOTE: the default port used is 8000.\
\
\
The simple python based client reads test cases from the file named \'93test_input\'94 (one per line), sends these to the http_server, and compares the response to the expected outputs in the file named \'93expected\'94. It uses the httplib library. Sample invocation and output:\
$ python http_client.py
\f1\fs22 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 ('Output:', 'igpay ananabay ahayay.')\
('Expected:', 'igpay ananabay ahayay.')\
SUCCESS\
('Output:', 'ashtray; anay omeleteyay .')\
('Expected:', 'ashtray; anay omeleteyay .')\
SUCCESS\
}